// Generated by CoffeeScript 1.8.0
var servicediff,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

servicediff = function(source, target) {
  var tag, _i, _len, _ref;
  if (source.Name !== target.Name) {
    return "Name different " + source.Name + " -> " + target.Name;
  }
  if (source.Port !== target.Port) {
    return "Port different " + source.Port + " -> " + target.Port;
  }
  if (source.Tags.length !== target.Tags.length) {
    return "Different tags (" + (source.Tags.join(', ')) + ") -> (" + (target.Tags.join(', ')) + ")";
  }
  _ref = target.Tags.length;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    tag = _ref[_i];
    if (__indexOf.call(source.Tags, tag) < 0) {
      return "New tag " + tag;
    }
  }
  return null;
};

module.exports = function(services, config, callback) {
  var difference, id, k, parsedservices, pool, result, s, service, v, _;
  parsedservices = {};
  for (_ in services) {
    s = services[_];
    if (!(s.Tags && __indexOf.call(s.Tags, 'doppelganger') >= 0)) {
      continue;
    }
    parsedservices[s.ID] = {
      ID: s.ID,
      Name: s.Service,
      Tags: s.Tags,
      Port: s.Port
    };
  }
  pool = {};
  for (k in parsedservices) {
    v = parsedservices[k];
    pool[k] = v;
  }
  result = {
    added: {},
    removed: {},
    modified: {},
    unchanged: {}
  };
  for (id in config) {
    service = config[id];
    if (pool[id] != null) {
      difference = servicediff(pool[id], service);
      if (difference == null) {
        result.unchanged[id] = service;
      } else {
        console.log(difference);
        result.modified[id] = service;
      }
      delete pool[id];
    } else {
      result.added[id] = service;
    }
  }
  for (k in pool) {
    v = pool[k];
    result.removed[k] = v;
  }
  return result;
};
